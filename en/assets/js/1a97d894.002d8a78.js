(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[595],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),g=a,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5718:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i={id:"data",title:"Data Access"},c={unversionedId:"getting-started/data",id:"getting-started/data",isDocsHomePage:!1,title:"Data Access",description:"Any ORM or library is supported in Kratos project for data accessing. Please refer to the examples for integration.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/getting-started/data.md",sourceDirName:"getting-started",slug:"/getting-started/data",permalink:"/en/docs/getting-started/data",editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/getting-started/data.md",version:"current",frontMatter:{id:"data",title:"Data Access"},sidebar:"docs",previous:{title:"Dependency Injection",permalink:"/en/docs/getting-started/wire"},next:{title:"FAQ",permalink:"/en/docs/getting-started/faq"}},l=[{value:"Install Ent",id:"install-ent",children:[]},{value:"Create Schema",id:"create-schema",children:[]},{value:"Create DB Connection Client",id:"create-db-connection-client",children:[]},{value:"References",id:"references",children:[]}],s={toc:l};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Any ORM or library is supported in Kratos project for data accessing. Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/go-kratos/kratos/tree/main/examples"},"examples")," for integration."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ent")," is an easy-to-use ORM which developed by ",(0,o.kt)("em",{parentName:"p"},"Facebook"),". Here is a brief guide to use this library."),(0,o.kt)("h3",{id:"install-ent"},"Install Ent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go get entgo.io/ent/cmd/ent\n")),(0,o.kt)("h3",{id:"create-schema"},"Create Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ent init User\n")),(0,o.kt)("p",null,"This command will generate schema in ",(0,o.kt)("inlineCode",{parentName:"p"},"project/ent/schema/")," directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// <project>/ent/schema/user.go\n\npackage schema\n\nimport "entgo.io/ent"\n\n// User holds the schema definition for the User entity.\ntype User struct {\n    ent.Schema\n}\n\n// Fields of the User.\nfunc (User) Fields() []ent.Field {\n    return nil\n}\n\n// Edges of the User.\nfunc (User) Edges() []ent.Edge {\n    return nil\n}\n')),(0,o.kt)("p",null,"Add two fields ",(0,o.kt)("inlineCode",{parentName:"p"},"name\u3001age")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"User")," table."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package schema\n\nimport (\n    "entgo.io/ent"\n    "entgo.io/ent/schema/field"\n)\n\n// Fields of the User.\nfunc (User) Fields() []ent.Field {\n    return []ent.Field{\n        field.Int("age").\n            Positive(),\n        field.String("name").\n            Default("unknown"),\n    }\n}\n')),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"go generate"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"go generate ./ent\n")),(0,o.kt)("h3",{id:"create-db-connection-client"},"Create DB Connection Client"),(0,o.kt)("p",null,"First, create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"ent.Client"),". We use SQLite3 here for demonstration."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "context"\n    "log"\n\n    "<project>/ent"\n\n    _ "github.com/mattn/go-sqlite3"\n)\n\nfunc main() {\n    client, err := ent.Open("sqlite3", "file:ent?mode=memory&cache=shared&_fk=1")\n    if err != nil {\n        log.Fatalf("failed opening connection to sqlite: %v", err)\n    }\n    defer client.Close()\n    // Run the auto migration tool.\n    if err := client.Schema.Create(context.Background()); err != nil {\n        log.Fatalf("failed creating schema resources: %v", err)\n    }\n}\n')),(0,o.kt)("p",null,"To create a ",(0,o.kt)("inlineCode",{parentName:"p"},"User")," in table."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func CreateUser(ctx context.Context, client *ent.Client) (*ent.User, error) {\n    u, err := client.User.\n        Create().\n        SetAge(30).\n        SetName("a8m").\n        Save(ctx)\n    if err != nil {\n        return nil, fmt.Errorf("failed creating user: %v", err)\n    }\n    log.Println("user was created: ", u)\n    return u, nil\n}\n')),(0,o.kt)("h3",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://entgo.io/docs/getting-started/"},"https://entgo.io/docs/getting-started/")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/examples/tree/main/blog/internal/data"},"https://github.com/go-kratos/examples/tree/main/blog/internal/data"))))}p.isMDXComponent=!0}}]);