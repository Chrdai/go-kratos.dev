(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5100],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8761:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i={id:"validate",title:"Validate",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},l=void 0,s={unversionedId:"component/middleware/validate",id:"component/middleware/validate",isDocsHomePage:!1,title:"Validate",description:"Validate middleware uses proto-gen-validate generated code for parameter validation. You could write parameter validation rules in proto files and generate codes, in order to automatically parameter validation.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/validate.md",sourceDirName:"component/middleware",slug:"/component/middleware/validate",permalink:"/en/docs/component/middleware/validate",editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/validate.md",tags:[],version:"current",frontMatter:{id:"validate",title:"Validate",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},sidebar:"docs",previous:{title:"Tracing",permalink:"/en/docs/component/middleware/tracing"},next:{title:"Overview",permalink:"/en/docs/component/transport/overview"}},d=[{value:"Installation",id:"installation",children:[]},{value:"Example",id:"example",children:[]},{value:"Numerics",id:"numerics",children:[]},{value:"Code Generation",id:"code-generation",children:[]},{value:"Middleware",id:"middleware",children:[]},{value:"References",id:"references",children:[]}],c={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Validate middleware uses proto-gen-validate generated code for parameter validation. You could write parameter validation rules in proto files and generate codes, in order to automatically parameter validation."),(0,o.kt)("h3",{id:"installation"},"Installation"),(0,o.kt)("p",null,"First you should install ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/envoyproxy/protoc-gen-validate"},"proto-gen-validate")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go get -d github.com/envoyproxy/protoc-gen-validate\n")),(0,o.kt)("p",null,"If any error appears in generation process or there are ",(0,o.kt)("inlineCode",{parentName:"p"},"// no validation rules for xxxx")," in the generated codes, you could try ",(0,o.kt)("inlineCode",{parentName:"p"},"git clone github.com/envoyproxy/protoc-gen-validate")," then run ",(0,o.kt)("inlineCode",{parentName:"p"},"make build")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Here are some examples of parameter validation for several common situations, you may also refer to more examples in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/envoyproxy/protoc-gen-validate"},"proto-gen-validate")),(0,o.kt)("h3",{id:"numerics"},"Numerics"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"// id must be greater than 0\nint64 id = 1 [(validate.rules).int64 = {gt: 0}];\n// age must be in the range (0, 120]\nint32 age = 2 [(validate.rules).int64 = {gt:0, lte: 120}];\n// code must be either 1, 2, or 3\nuint32 code = 3 [(validate.rules).uint32 = {in: [1,2,3]}];\n// score cannot be 0 nor 0.99\nfloat score = 1 [(validate.rules).float = {not_in: [0, 99.99]}];\n")),(0,o.kt)("h4",{id:"bools"},"Bools"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"// state must be set to true\nbool state = 5 [(validate.rules).bool.const = true];\n// x cannot be set to true\nbool state = 5 [(validate.rules).bool.const = false];\n")),(0,o.kt)("h4",{id:"strings"},"Strings"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},'// x must be set to "/hello"\nstring path = 6 [(validate.rules).string.const = "/hello"];\n// phone must be exactly 11 characters long\nstring phone = 7 [(validate.rules).string.len = 11];\n// explain must be at least 10 characters long\nstring explain = 8 [(validate.rules).string.min_len =  10];\n// name must be between 1 and 10 characters, inclusive\nstring name = 9 [(validate.rules).string = {min_len: 1, max_len: 10}];\n// card must be a non-empty, case-insensitive hexadecimal string\nstring card = 10 [(validate.rules).string.pattern = "(?i)^[0-9a-f]+$"];\n// x must be a valid email address (via RFC 1034)\nstring email = 11 [(validate.rules).string.email = true];\n')),(0,o.kt)("h4",{id:"messages"},"Messages"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"// info cannot be unset\nInfo info = 11 [(validate.rules).message.required = true];\nmessage Info {\n    string address = 1;\n}\n")),(0,o.kt)("h3",{id:"code-generation"},"Code Generation"),(0,o.kt)("p",null,"You could use ",(0,o.kt)("inlineCode",{parentName:"p"},"make validate")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"protoc")," directly to generate validation code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make validate\n# or\nprotoc --proto_path=. \\\n           --proto_path=./third_party \\\n           --go_out=paths=source_relative:. \\\n           --validate_out=paths=source_relative,lang=go:. \\\n           xxxx.proto\n")),(0,o.kt)("h3",{id:"middleware"},"Middleware"),(0,o.kt)("p",null,"We can inject the validate middleware into HTTP or gRPC, and the validate middleware automatically validates the parameters according to the rules written in the proto when request entering."),(0,o.kt)("h4",{id:"http"},"HTTP"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'httpSrv := http.NewServer(\n    http.Address(":8000"),\n    http.Middleware(\n        validate.Validator(),\n    ))\n')),(0,o.kt)("h4",{id:"grpc"},"gRPC"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'grpcSrv := grpc.NewServer(\n    grpc.Address(":9000"),\n    grpc.Middleware(\n        validate.Validator(),\n    ))\n')),(0,o.kt)("h3",{id:"references"},"References"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/kratos/tree/main/examples/validate"},"https://github.com/go-kratos/kratos/tree/main/examples/validate"))))}u.isMDXComponent=!0}}]);