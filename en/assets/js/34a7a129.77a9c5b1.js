(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{116:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var g=o.a.createContext({}),u=function(e){var n=o.a.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(g.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},s=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=u(t),s=r,m=p["".concat(i,".").concat(s)]||p[s]||d[s]||a;return t?o.a.createElement(m,l(l({ref:n},g),{},{components:t})):o.a.createElement(m,l({ref:n},g))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var g=2;g<a;g++)i[g]=t[g];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),o=t(7),a=(t(0),t(116)),i={id:"logging",title:"Logging"},l={unversionedId:"component/logging",id:"component/logging",isDocsHomePage:!1,title:"Logging",description:"Interface",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/component/logging.md",slug:"/component/logging",permalink:"/en/docs/component/logging",editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/logging.md",version:"current",sidebar:"docs",previous:{title:"Config",permalink:"/en/docs/component/config"},next:{title:"Metrics",permalink:"/en/docs/component/metrics"}},c=[{value:"Interface",id:"interface",children:[]},{value:"Usage",id:"usage",children:[]}],g={toc:c};function u(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},g,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"interface"},"Interface"),Object(a.b)("p",null,"To make it easy to integrate with various of logging libraries, the ",Object(a.b)("inlineCode",{parentName:"p"},"Logger")," interface only requires the ",Object(a.b)("inlineCode",{parentName:"p"},"Print")," method. You could either use the logger that we provided, or implement the Logger interface by your own."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},"type Logger interface {\n    Print(pairs ...interface{})\n}\n")),Object(a.b)("h3",{id:"usage"},"Usage"),Object(a.b)("h4",{id:"print-to-standard-output"},"Print to Standard Output"),Object(a.b)("p",null,"You could use ",Object(a.b)("inlineCode",{parentName:"p"},"NewHelper")," create a ",Object(a.b)("inlineCode",{parentName:"p"},"log.Helper")," to wrap the logger struct, the helper will provide many log methods of different logging levels."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},'logger := log.NewStdLogger()\nlog := log.NewHelper("module_name", logger)\n// Levels\nlog.Info("some log")\nlog.Infof("format %s", "some log")\nlog.Infow("field_name", "some log")\n')),Object(a.b)("h4",{id:"print-to-fluentd"},"Print to Fluentd"),Object(a.b)("p",null,'To print to fluentd, you could "github.com/go-kratos/fluent".'),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},'import "github.com/go-kratos/fluent"\n\naddr := "unix:///var/run/fluent/fluent.sock"\nlogger,err := fluent.NewLogger(addr)\nif err != nil {\n    return \n}\nlog := log.NewHelper("module_name", logger)\n// Levels\nlog.Info("some log")\nlog.Infof("format %s", "some log")\nlog.Infow("field_name", "some log")\n')),Object(a.b)("h4",{id:"logging-middleware"},"Logging middleware"),Object(a.b)("p",null,"To enable logging information of every requests, you could add ",Object(a.b)("inlineCode",{parentName:"p"},"logging.Server()")," in ",Object(a.b)("inlineCode",{parentName:"p"},"http.ServerOption"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-go"},"var opts = []http.ServerOption{\n        http.Middleware(\n            middleware.Chain(\n                logging.Server(),\n            ),\n        ),\n    }\nhttp.NewServer(opts...)\n")))}u.isMDXComponent=!0}}]);